@page
@model WeddingSite.Pages.GästlistanModel
@{
    ViewData["Title"] = "Gästlistan";

    var DietOptions = new List<(string text, string value)> {
        ("Vegan", "vegan"),
        ("Gluten (allergi eller intolerans)", "gluten"),
        ("Laktos (allergi eller intolerans)", "lactose"),
        ("Nötallergi", "nuts"),
        ("Soja (allergi eller intolerans)", "soy"),
        ("Baljväxter (t.ex. ärtor, linser)", "baljvaxt"),
        ("Citrus (allergi eller intolerans)", "citrus"),
        ("Annat", "other"),
        ("+1 Vegan", "plus_vegan"),
        ("+1 Gluten (allergi eller intolerans)", "plus_gluten"),
        ("+1 Laktos (allergi eller intolerans)", "plus_lactose"),
        ("+1 Nötallergi", "plus_nuts"),
        ("+1 Soja (allergi eller intolerans)", "plus_soy"),
        ("+1 Baljväxter (t.ex. ärtor, linser)", "plus_baljvaxt"),
        ("+1 Citrus (allergi eller intolerans)", "plus_citrus"),
        ("+1 Annat", "plus_other")
    };

    var attendingGuests = Model.GuestsWithRsvp.Count(g => g.Attending.HasValue && g.Attending.Value) + Model.GuestsWithRsvp.Count(g => g.PlusOneAttending.HasValue && g.PlusOneAttending.Value);
    var notAttendingGuests = Model.GuestsWithRsvp.Count(g => g.Attending.HasValue && !g.Attending.Value) + Model.GuestsWithRsvp.Count(g => g.PlusOneAttending.HasValue && !g.PlusOneAttending.Value);

    var minimumGuests = 63;
}
<div class="text-center">
    <h1 class="display-4 tenor-sans-regular">Gästlistan (eller vilka som skickat in O.S.A)</h1>
    <hr />
    Kommer: @attendingGuests Kommer inte: @notAttendingGuests<br />Kvar till minsta antal: @(minimumGuests - attendingGuests) (Vi har sagt 70 till Flottsbro, och vi kan ha 10% färre)
    <table class="table">
        <thead>
            <tr>
                <th>Gäst</th>
                <th>Egen transport</th>
                <th>Mat-saker</th>
                <th>Meddelande</th>
                <th>Inskickat</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var guest in Model.GuestsWithRsvp)
            {
                var diet = guest.DietaryOptions?.Split(',') ?? [];
                var formatted_diet = Html.Raw(string.Join(", ", DietOptions.Where(k => diet.Any(i => i == k.value)).Select(i => $"<kbd>{i.text}</kbd>")));
                <tr>
                    <td>
                        @guest.FirstName @guest.LastName (@(guest.Attending.HasValue && guest.Attending.Value ? "Kommer" : "Kommer inte"))
                        @Html.Raw(!string.IsNullOrEmpty(guest.PlusOne) ?
    $"<br />{guest.PlusOne} ({(guest.PlusOneAttending.HasValue && guest.PlusOneAttending.Value ? "Kommer" : "Kommer inte")})" :
    string.Empty)
                    </td>
                    <td>
                        @(guest.OwnTransport ? "Ja" : "Nej")
                    </td>
                    <td>@formatted_diet @(formatted_diet.ToString().Length > 0 ? Html.Raw("<br />") : null)@guest.DietaryRequirements</td>
                    <td>@guest.Message</td>
                    <td>@(guest.RSVPDate.HasValue ? guest.RSVPDate.Value.LocalDateTime.ToShortDateString() : Html.Raw("<i>Okänt</i>"))</td>
                </tr>
            }
        </tbody>
    </table>
</div>