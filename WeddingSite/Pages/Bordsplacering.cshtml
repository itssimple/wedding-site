@page
@using System.Text.Json
@model WeddingSite.Pages.BordsplaceringModel
@{
    ViewData["Title"] = "Bordsplacering";
}
<div class="text-center">
    <h1 class="display-6 tenor-sans-regular">Bordsplacering</h1>
    <hr />
    <div class="row">
        <div class="col-md">
            @if (Model.SeatingList.Count == 0)
            {
                <p>För att se den här sidan, behöver du ange koden som finns intill QR-koden.</p>
                <form method="post">
                    <div class="row justify-content-center">
                        <div class="col-lg-3 col-sm-10">
                            <label asp-for="SecretCode" class="control-label">Fyll i koden (6 tecken)</label>
                            <input asp-for="SecretCode" required class="form-control text-center" maxlength="6" placeholder="123123" type="number" />
                            <span asp-validation-for="SecretCode" class="text-danger"></span>
                            <br />

                        </div>
                    </div>
                    <div class="d-grid d-block d-lg-inline-block">
                        <button type="submit" class="btn btn-primary">Visa platserna</button>
                    </div>
                </form>
            }
            else
            {
                var honorTableGuests = Model.SeatingList.Where(g => g.TableNumber == 0).OrderBy(g => g.SeatNumber).ToList();

                <p>Vem är du? Välj ditt namn för att se din plats</p>
                <select name="IAmWeasel" onchange="LookupUser(this)">
                    <option>Välj dig själv i listan</option>
                    @foreach (var guest in Model.SeatingList.OrderBy(i => i.PersonName))
                    {
                        <option value="@(guest.GuestId)_@(guest.PlusOne)">@guest.PersonName</option>
                    }
                </select>
                <table class="table">
                    <thead>
                        <tr>
                            <td>
                                <div class="wedding-table">
                                    <div class="honor-table">
                                        @foreach (var honorGuest in honorTableGuests)
                                        {
                                            <div class="honor-seat" data-guestid="@honorGuest.GuestId" data-plusone="0">@honorGuest.PersonName.Split(' ')[0]</div>
                                        }
                                    </div>
                                </div>
                            </td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <div class="wedding-table">
                                    <div class="guest-table">
                                        @for (var i = 1; i <= 4; i++)
                                        {
                                            <div class="row">
                                                <div class="guest-table-header">
                                                    Bord @i
                                                </div>
                                                <div class="guest-seat-tables">
                                                    @for (var x = 1; x <= 16; x++)
                                                    {
                                                        var guest = Model.SeatingList.FirstOrDefault(ix => ix.TableNumber == i && ix.SeatNumber == x);
                                                        if (guest != null)
                                                        {
                                                            var gName = guest.PersonName.Split(' ');
                                                            var showName = gName[0];
                                                            if (showName != "Leo")
                                                            {
                                                                var dupliNames = Model.SeatingList.Count(c => c.PersonName.StartsWith(showName) && c.GuestId != guest.GuestId);
                                                                showName = gName[0] + (dupliNames > 0 ? " " + string.Join(" ", gName.Skip(1).Select(k => k[0])) : "");
                                                            }
                                                            <div class="guest-seat" data-guestid="@guest.GuestId" data-plusone="@(guest.PlusOne ? "1" : "0")">
                                                                <div>@showName</div>
                                                            </div>
                                                        }

                                                    }
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <script type="text/javascript">
                    function LookupUser(obj) {
                        const [guestId, plusOne] = obj.value.split('_');

                        const findGuest = document.querySelector('[data-guestid="' + guestId + '"][data-plusone="' + (plusOne == 'False' ? '0' : '1') + '"]');
                        console.log(findGuest);
                        findGuest.classList.add('mark-guest');
                        setTimeout(function() {
                            findGuest.classList.remove('mark-guest');
                        }, 10000);
                    }
                </script>
            }
        </div>
    </div>
</div>